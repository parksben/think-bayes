{"version":3,"sources":["../esm/math.js"],"names":["factor","l","r","tails","map","x","String","split","length","Math","max","items","a","b","f","parseInt","add","sub","mult","div","factorial","n","res","i"],"mappings":"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","sourcesContent":["// Make a factor for float point numbers becoming to integer\nconst factor = (l, r) => {\n  const tails = [l, r].map(x => (String(x).split('.')[1] || '').length);\n  return 10 ** Math.max(...tails);\n};\n\n// Make items for calculate\nconst items = (a, b) => {\n  const f = factor(a, b);\n  const [l, r] = [a, b].map(x => parseInt(x * f));\n  return { l, r, f };\n};\n\n// Add: a + b\nexport const add = (a, b) => {\n  const { l, r, f } = items(a, b);\n  return (l + r) / f;\n};\n\n// Subtract: a - b\nexport const sub = (a, b) => {\n  const { l, r, f } = items(a, b);\n  return (l - r) / f;\n};\n\n// Multiply: a * b\nexport const mult = (a, b) => {\n  const { l, r, f } = items(a, b);\n  return (l * r) / (f * f);\n};\n\n// Divide: a / b\nexport const div = (a, b) => {\n  const { l, r } = items(a, b);\n  return l / r;\n};\n\n// Factorial: n!\nexport const factorial = n => {\n  let res = 1;\n  for (let i = 0; i < n; i++) {\n    res *= i + 1;\n  }\n  return res;\n};\n\nexport default {\n  add,\n  sub,\n  mult,\n  div,\n  factorial,\n};\n"],"file":"math.js"}