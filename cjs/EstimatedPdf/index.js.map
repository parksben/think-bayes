{"version":3,"sources":["../../esm/EstimatedPdf/index.js"],"names":["EstimatedPdf","sample","kde","GaussianKde","x","evaluate","xs","name","ps","pmf","map","i","Pdf"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;AAEA;;;;;IAKqBA,Y;;;;;AACnB,wBAAYC,MAAZ,EAAoB;AAAA;;AAAA;;AAClB,UAAKC,GAAL,GAAW,IAAIC,oBAAJ,CAAgBF,MAAhB,CAAX;AADkB;AAEnB;AAED;;;;;;;;4BAIQG,C,EAAG;AACT,aAAO,KAAKF,GAAL,CAASG,QAAT,CAAkBD,CAAlB,CAAP;AACD;;;4BAEOE,E,EAAIC,I,EAAM;AAChB,UAAMC,EAAE,GAAG,KAAKN,GAAL,CAASG,QAAT,CAAkBC,EAAlB,CAAX;AACA,UAAMG,GAAG,GAAG,kCACVH,EAAE,CAACI,GAAH,CAAO,UAACN,CAAD,EAAIO,CAAJ;AAAA,eAAU,CAACP,CAAD,EAAII,EAAE,CAACG,CAAD,CAAN,CAAV;AAAA,OAAP,CADU,EAEVJ,IAFU,CAAZ;AAIA,aAAOE,GAAP;AACD;;;;EApBuCG,a","sourcesContent":["import Pdf from '../Pdf';\nimport { makePmfFromItems } from '../convertors';\nimport GaussianKde from '../GaussianKde';\n\n/**\n * Represents a PDF estimated by KDE.\n * Estimates the density function based on a sample.\n * @param {array} sample sequence of data\n */\nexport default class EstimatedPdf extends Pdf {\n  constructor(sample) {\n    this.kde = new GaussianKde(sample);\n  }\n\n  /**\n   * Evaluates this Pdf at x.\n   * @returns float probability density\n   */\n  density(x) {\n    return this.kde.evaluate(x);\n  }\n\n  makePmf(xs, name) {\n    const ps = this.kde.evaluate(xs);\n    const pmf = makePmfFromItems(\n      xs.map((x, i) => [x, ps[i]]),\n      name\n    );\n    return pmf;\n  }\n}\n"],"file":"index.js"}